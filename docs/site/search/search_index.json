{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Aprendiendo Linux La interfaz de texto - Comandos B\u00e1sico Una de las funciones del sistema operativo es hacer de intermediario entre el usuario y el equipo: el sistema operativo le proporciona una interfaz para comunicarse con el ordenador. Las interfaces pueden ser de dos tipos : de texto : el usuario se comunica mediante el teclado escribiendo comandos que el sistema operativo entiende y ejecuta. Esta parte del sistema operativo se llama shell o interprete de comandos. El shell lee el comando tecleado, lo ejecuta y muestra el resultado por pantalla y le pide al usuario un nuevo comando (mostr\u00e1ndole el car\u00e1cter de petici\u00f3n de comandos o prompt). gr\u00e1fica : constan de ventanas, iconos y botones con los que el usuario interact\u00faa. Son mucho m\u00e1s sencillos de usar para el usuario por lo que actualmente la mayor\u00eda de sistemas operativos proporcionan este tipo de interfaces. La interfaz que ten\u00edan los primeros sistemas operativos para comunicarse con el usuario era de texto, en la que el usuario ten\u00eda que escribir una orden y esperar los resultados. Desde hace ya muchos a\u00f1os los sistemas operativos disponen tambi\u00e9n de una interfaz gr\u00e1fica que facilita enormemente su uso ya que ahora no es necesario conocer multitud de \u00f3rdenes. Entonces, \u00bfpor qu\u00e9 usar la l\u00ednea de comandos? . Las razones son varias: no todo se puede hacer desde el entorno gr\u00e1fico muchas veces para hacer una acci\u00f3n debemos pasar por muchos men\u00fas y ventanas lo que lleva tiempo es dif\u00edcil automatizar tareas que hacemos a menudo (a veces puede hacerse con macros y otros es imposible) Nota Esta documentaci\u00f3n es una copia del contenido dado en la asignatura Sistemas Inform\u00e1ticos del 1er a\u00f1o de DAM. 2024-2025","title":"Inicio"},{"location":"#aprendiendo-linux","text":"","title":"Aprendiendo Linux"},{"location":"#la-interfaz-de-texto-comandos-basico","text":"Una de las funciones del sistema operativo es hacer de intermediario entre el usuario y el equipo: el sistema operativo le proporciona una interfaz para comunicarse con el ordenador. Las interfaces pueden ser de dos tipos : de texto : el usuario se comunica mediante el teclado escribiendo comandos que el sistema operativo entiende y ejecuta. Esta parte del sistema operativo se llama shell o interprete de comandos. El shell lee el comando tecleado, lo ejecuta y muestra el resultado por pantalla y le pide al usuario un nuevo comando (mostr\u00e1ndole el car\u00e1cter de petici\u00f3n de comandos o prompt). gr\u00e1fica : constan de ventanas, iconos y botones con los que el usuario interact\u00faa. Son mucho m\u00e1s sencillos de usar para el usuario por lo que actualmente la mayor\u00eda de sistemas operativos proporcionan este tipo de interfaces. La interfaz que ten\u00edan los primeros sistemas operativos para comunicarse con el usuario era de texto, en la que el usuario ten\u00eda que escribir una orden y esperar los resultados. Desde hace ya muchos a\u00f1os los sistemas operativos disponen tambi\u00e9n de una interfaz gr\u00e1fica que facilita enormemente su uso ya que ahora no es necesario conocer multitud de \u00f3rdenes. Entonces, \u00bfpor qu\u00e9 usar la l\u00ednea de comandos? . Las razones son varias: no todo se puede hacer desde el entorno gr\u00e1fico muchas veces para hacer una acci\u00f3n debemos pasar por muchos men\u00fas y ventanas lo que lleva tiempo es dif\u00edcil automatizar tareas que hacemos a menudo (a veces puede hacerse con macros y otros es imposible) Nota Esta documentaci\u00f3n es una copia del contenido dado en la asignatura Sistemas Inform\u00e1ticos del 1er a\u00f1o de DAM. 2024-2025","title":"La interfaz de texto - Comandos B\u00e1sico"},{"location":"comodines/","text":"Comodines Si los par\u00e1metros son nombres de ficheros podemos utilizar caracteres comodines. Los comodines son: Tip Asterisco (*): sustituye a cero o m\u00e1s caracteres , Interrogante (?): sustituye a un car\u00e1cter Vamos a ver algunos ejemplos en los que utilizaremos el comando copy. Se trata de un comando de Windows que permite copiar archivos y al que se le pasan 2 par\u00e1metros: el primero el nombre del archivo a copiar y el segundo la ruta donde el copiaremos. C:\\Users\\sergi>copy info*.txt c:\\users\\sergi\\prueba Comando de Windows que copia todos los archivos cuyo nombre empieza por \"inf\" seguido de cualquier car\u00e1cter y la extensi\u00f3n es \"txt\" desde el directorio actual en el directorio C:\\Users\\sergi\\prueba (copiar\u00e1 inf.txt, informe.txt, informacion_junio.txt , etc pero no informe.doc, mi_informe.txt , ...) C:\\Users\\sergi>copy *_junio.doc c:\\users\\sergi\\prueba Comando de Windows que copia todos los archivos cuyo nombre termina por \"_junio\" y la extensi\u00f3n es \"doc\" desde el directorio actual en el directorio C:\\Users\\sergi\\ prueba (copiar\u00e1 informe_junio.doc, ventas_junio.doc , etc pero no informe_junio_clientes.doc, informe_junio.txt , ...) C:\\Users\\sergi>copy *.* c:\\users\\sergi\\prueba Comando de Windows que copia todos los archivos (con cualquier nombre y extensi\u00f3n) desde el directorio actual en el directorio C:\\Users\\sergi\\prueba C:\\Users\\sergi>copy ma?o.jpg c:\\users\\sergi\\prueba Comando de Windows que copia todos los archivos cuyo nombre es \"ma\", una letra cualquiera y \"o\" y la extensi\u00f3n es \"jpg\" desde el directorio actual en el directorio C:\\Users\\sergi (copiar\u00e1 mano.jpg , mazo.jpg, etc pero no marzo.jpg -2 letras- ni mao.jpg -0 letras-, ni mayo.txt por no cumplir con la extensi\u00f3n).","title":"Comodines"},{"location":"comodines/#comodines","text":"Si los par\u00e1metros son nombres de ficheros podemos utilizar caracteres comodines. Los comodines son: Tip Asterisco (*): sustituye a cero o m\u00e1s caracteres , Interrogante (?): sustituye a un car\u00e1cter Vamos a ver algunos ejemplos en los que utilizaremos el comando copy. Se trata de un comando de Windows que permite copiar archivos y al que se le pasan 2 par\u00e1metros: el primero el nombre del archivo a copiar y el segundo la ruta donde el copiaremos. C:\\Users\\sergi>copy info*.txt c:\\users\\sergi\\prueba Comando de Windows que copia todos los archivos cuyo nombre empieza por \"inf\" seguido de cualquier car\u00e1cter y la extensi\u00f3n es \"txt\" desde el directorio actual en el directorio C:\\Users\\sergi\\prueba (copiar\u00e1 inf.txt, informe.txt, informacion_junio.txt , etc pero no informe.doc, mi_informe.txt , ...) C:\\Users\\sergi>copy *_junio.doc c:\\users\\sergi\\prueba Comando de Windows que copia todos los archivos cuyo nombre termina por \"_junio\" y la extensi\u00f3n es \"doc\" desde el directorio actual en el directorio C:\\Users\\sergi\\ prueba (copiar\u00e1 informe_junio.doc, ventas_junio.doc , etc pero no informe_junio_clientes.doc, informe_junio.txt , ...) C:\\Users\\sergi>copy *.* c:\\users\\sergi\\prueba Comando de Windows que copia todos los archivos (con cualquier nombre y extensi\u00f3n) desde el directorio actual en el directorio C:\\Users\\sergi\\prueba C:\\Users\\sergi>copy ma?o.jpg c:\\users\\sergi\\prueba Comando de Windows que copia todos los archivos cuyo nombre es \"ma\", una letra cualquiera y \"o\" y la extensi\u00f3n es \"jpg\" desde el directorio actual en el directorio C:\\Users\\sergi (copiar\u00e1 mano.jpg , mazo.jpg, etc pero no marzo.jpg -2 letras- ni mao.jpg -0 letras-, ni mayo.txt por no cumplir con la extensi\u00f3n).","title":"Comodines"},{"location":"conceptos_basicos/","text":"Conceptos B\u00e1sicos \u00a1Cuidado! Si vas a realizar pruebas, recomendamos que lo hagas en una m\u00e1quina virtual vac\u00eda en la que no arriesgues informaci\u00f3n importante. Una de las formas con las que nos podemos comunicar con un sistema operativo es el CLI (Command-line interface) . La interfaz de l\u00ednea de comandos es una pantalla donde el usuario se comunica con el ordenador escribiendo en la pantalla una serie de comandos que proporciona el SO. Esta interfaz tiene como desventaja que es dif\u00edcil de aprender , ya que hay que recordar el nombre de los mandos y la sintaxis necesaria para que el ordenador los interprete correctamente. Antes de que existiera Windows, MS-DOS, era uno de los sistemas operativos que ten\u00edan los ordenadores. Este sistema ya no est\u00e1 disponible pero el podemos simular en Windows. El programa que interpreta los comandos de MS-DOS es el \"S\u00edmbolo del sistema\" y se ejecuta mediante la aplicaci\u00f3n cmd.exe . La consola es una interfaz de usuario de tipo texto para interactuar con el sistema operativo. El usuario escribe una orden en el s\u00edmbolo del sistema o prompt que se ejecuta al pulsar la tecla Intro . Un programa, llamado int\u00e9rprete de comandos o shell , comprueba si la sintaxis es correcta y ejecuta el mando. Cuando finaliza vuelve a mostrar el prompt y podemos escribir otra orden. El prompt es un s\u00edmbolo que muestra el sistema operativo y que indica que est\u00e1 preparado para recibir \u00f3rdenes. Adem\u00e1s, muestra informaci\u00f3n al usuario como el directorio actual o el nombre del usuario y el ordenador en el caso de Linux En Windows el prompt es el s\u00edmbolo \u201c>\u201d y muestra el directorio actual: C:\\Users\\Sergio, es decir, el directorio personal del usuario Sergio. En Linux el prompt de cualquier usuario (excepto root ) es $ y la informaci\u00f3n que muestra es el usuario ( sergio ), el nombre del ordenador ( sergio-virtualbox ) y el directorio actual (~, virgulilla (ALT GR + 4), que es el directorio personal del usuario, es decir, /home/sergio ). El s\u00edmbolo @ separa el usuario y el ordenador y el s\u00edmbolo: separa el ordenador del directorio actual root@sergio-VitualBox:/home/sergio# El Linux el prompt de root es # . La informaci\u00f3n mostrada es el usuario ( root ), el ordenador ( sergio-virtualbox ) y el directorio actual (/home/sergio, es el mismo que antes pero en este caso ese directorio no es el directorio personal de root por lo que no pone ~). El directorio actual es el directorio en el que nos encontramos en este instante y en el que se ejecutar\u00e1 la orden . Si, por ejemplo, el orden es de crear el directorio \" prueba \" (mkdir prueba) ese directorio se crear\u00e1 en el directorio actual. En los ejemplos anteriores se crear\u00e1 dentro de /home/sergio (en los ejemplos de Linux) y dentro de C:\\Users\\sergio (en el ejemplo de Windows).","title":"Introducci\u00f3n"},{"location":"conceptos_basicos/#conceptos-basicos","text":"\u00a1Cuidado! Si vas a realizar pruebas, recomendamos que lo hagas en una m\u00e1quina virtual vac\u00eda en la que no arriesgues informaci\u00f3n importante. Una de las formas con las que nos podemos comunicar con un sistema operativo es el CLI (Command-line interface) . La interfaz de l\u00ednea de comandos es una pantalla donde el usuario se comunica con el ordenador escribiendo en la pantalla una serie de comandos que proporciona el SO. Esta interfaz tiene como desventaja que es dif\u00edcil de aprender , ya que hay que recordar el nombre de los mandos y la sintaxis necesaria para que el ordenador los interprete correctamente. Antes de que existiera Windows, MS-DOS, era uno de los sistemas operativos que ten\u00edan los ordenadores. Este sistema ya no est\u00e1 disponible pero el podemos simular en Windows. El programa que interpreta los comandos de MS-DOS es el \"S\u00edmbolo del sistema\" y se ejecuta mediante la aplicaci\u00f3n cmd.exe . La consola es una interfaz de usuario de tipo texto para interactuar con el sistema operativo. El usuario escribe una orden en el s\u00edmbolo del sistema o prompt que se ejecuta al pulsar la tecla Intro . Un programa, llamado int\u00e9rprete de comandos o shell , comprueba si la sintaxis es correcta y ejecuta el mando. Cuando finaliza vuelve a mostrar el prompt y podemos escribir otra orden. El prompt es un s\u00edmbolo que muestra el sistema operativo y que indica que est\u00e1 preparado para recibir \u00f3rdenes. Adem\u00e1s, muestra informaci\u00f3n al usuario como el directorio actual o el nombre del usuario y el ordenador en el caso de Linux En Windows el prompt es el s\u00edmbolo \u201c>\u201d y muestra el directorio actual: C:\\Users\\Sergio, es decir, el directorio personal del usuario Sergio. En Linux el prompt de cualquier usuario (excepto root ) es $ y la informaci\u00f3n que muestra es el usuario ( sergio ), el nombre del ordenador ( sergio-virtualbox ) y el directorio actual (~, virgulilla (ALT GR + 4), que es el directorio personal del usuario, es decir, /home/sergio ). El s\u00edmbolo @ separa el usuario y el ordenador y el s\u00edmbolo: separa el ordenador del directorio actual root@sergio-VitualBox:/home/sergio# El Linux el prompt de root es # . La informaci\u00f3n mostrada es el usuario ( root ), el ordenador ( sergio-virtualbox ) y el directorio actual (/home/sergio, es el mismo que antes pero en este caso ese directorio no es el directorio personal de root por lo que no pone ~). El directorio actual es el directorio en el que nos encontramos en este instante y en el que se ejecutar\u00e1 la orden . Si, por ejemplo, el orden es de crear el directorio \" prueba \" (mkdir prueba) ese directorio se crear\u00e1 en el directorio actual. En los ejemplos anteriores se crear\u00e1 dentro de /home/sergio (en los ejemplos de Linux) y dentro de C:\\Users\\sergio (en el ejemplo de Windows).","title":"Conceptos B\u00e1sicos"},{"location":"scripts/","text":"Scripts Adem\u00e1s de escribir uno por uno los comandos a ejecutar tambi\u00e9n se pueden escribir todos en un fichero de texto llamado script . Un script contiene en cada l\u00ednea un comando . Ejecutar un script es equivalente a escribir y ejecutar uno tras otro todos los comandos que contiene. Importante Los scripts se utilizan habitualmente para automatizar tareas que debemos realizar peri\u00f3dicamente en el ordenador El script incluir\u00e1 los comandos necesarios para hacer esa tarea y lo \u00fanico que tenemos que hacer es ejecutarlo (escribir su nombre) desde la l\u00ednea de comandos o incluso programar su ejecuci\u00f3n.","title":"Scripts"},{"location":"scripts/#scripts","text":"Adem\u00e1s de escribir uno por uno los comandos a ejecutar tambi\u00e9n se pueden escribir todos en un fichero de texto llamado script . Un script contiene en cada l\u00ednea un comando . Ejecutar un script es equivalente a escribir y ejecutar uno tras otro todos los comandos que contiene. Importante Los scripts se utilizan habitualmente para automatizar tareas que debemos realizar peri\u00f3dicamente en el ordenador El script incluir\u00e1 los comandos necesarios para hacer esa tarea y lo \u00fanico que tenemos que hacer es ejecutarlo (escribir su nombre) desde la l\u00ednea de comandos o incluso programar su ejecuci\u00f3n.","title":"Scripts"},{"location":"sintaxis/","text":"Sintaxis Un comando es simplemente una palabra en ingl\u00e9s que expresa una operaci\u00f3n a realizar y que se debe teclear despu\u00e9s del prompt. Cuando ejecutamos un comando podemos pasarle uno o m\u00e1s par\u00e1metros (unos obligatorios y otros opcionales, seg\u00fan el comando). Los par\u00e1metros son informaci\u00f3n que recibir\u00e1 el comando para su ejecuci\u00f3n y despu\u00e9s del nombre del comando separados por espacios en blanco. sergio@sergio-VirtualBox:~$mkdir prueba En el ejemplo anterior el comando mkdir recibe como par\u00e1metro en nombre del directorio a crear, en este caso prueba.","title":"Sintaxis"},{"location":"sintaxis/#sintaxis","text":"Un comando es simplemente una palabra en ingl\u00e9s que expresa una operaci\u00f3n a realizar y que se debe teclear despu\u00e9s del prompt. Cuando ejecutamos un comando podemos pasarle uno o m\u00e1s par\u00e1metros (unos obligatorios y otros opcionales, seg\u00fan el comando). Los par\u00e1metros son informaci\u00f3n que recibir\u00e1 el comando para su ejecuci\u00f3n y despu\u00e9s del nombre del comando separados por espacios en blanco. sergio@sergio-VirtualBox:~$mkdir prueba En el ejemplo anterior el comando mkdir recibe como par\u00e1metro en nombre del directorio a crear, en este caso prueba.","title":"Sintaxis"}]}